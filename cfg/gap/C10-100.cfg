algorithm = simple_ga
encoding = gap
problem = gap
problem_data = ../prob/gap/C10-100.dat
#neighborhood = sss

population_size = 100
selection = tournament
crossover = uniform
crossover_rate = 0.95
mutation = sss
mutation_rate = 0.01
replacement = elitist
elites = 1

#repair_operator = gap_repair_nd
penalization_factor = 10
#local_search = tabu_search
#tabu_tenure = 10
#local_search_iterations = 10

metric = evaluation_count
metric = generation_count
metric = population_entropy
metric = best_solution

report_all_best = true
print_every_generation = false

terminator = evaluation_limit
max_evaluations = 10000000

comparator = fitness
trials = 1
